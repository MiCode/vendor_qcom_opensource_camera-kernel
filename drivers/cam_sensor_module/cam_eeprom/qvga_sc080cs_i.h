#ifndef _QVGA_SC080CS_I_H_
#define _QVGA_SC080CS_I_H_

#include "cam_eeprom_dev.h"
#include "cam_req_mgr_dev.h"
#include "cam_eeprom_soc.h"
#include "cam_eeprom_core.h"
#include "cam_debug_util.h"
#include "camera_main.h"

#define QVGA_SC080CS_SLAVE_ADDR      0x6C

#define QVGA_SC080CS_SLAVE_ADDR_REG  0x3107
#define QVGA_SC080CS_LUX_DATA_REG    0x5160

struct eeprom_memory_map_init_write_params qvga_sc080cs_setting  ={
	.slave_addr = QVGA_SC080CS_SLAVE_ADDR,
	.mem_settings =
	{
		{0x0103, CAMERA_SENSOR_I2C_TYPE_WORD,0x01, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x0100, CAMERA_SENSOR_I2C_TYPE_WORD,0x00, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x8001, CAMERA_SENSOR_I2C_TYPE_WORD,0x18, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x5001, CAMERA_SENSOR_I2C_TYPE_WORD,0x01, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x30b0, CAMERA_SENSOR_I2C_TYPE_WORD,0x0a, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x470b, CAMERA_SENSOR_I2C_TYPE_WORD,0x0a, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x470d, CAMERA_SENSOR_I2C_TYPE_WORD,0x06, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x309b, CAMERA_SENSOR_I2C_TYPE_WORD,0xf1, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x0100, CAMERA_SENSOR_I2C_TYPE_WORD,0x01, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x5170, CAMERA_SENSOR_I2C_TYPE_WORD,0x80, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x5172, CAMERA_SENSOR_I2C_TYPE_WORD,0xc1, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x518b, CAMERA_SENSOR_I2C_TYPE_WORD,0x00, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x518c, CAMERA_SENSOR_I2C_TYPE_WORD,0x20, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x518d, CAMERA_SENSOR_I2C_TYPE_WORD,0x02, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x518e, CAMERA_SENSOR_I2C_TYPE_WORD,0x00, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x519e, CAMERA_SENSOR_I2C_TYPE_WORD,0x10, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x518f, CAMERA_SENSOR_I2C_TYPE_WORD,0x01, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x518f, CAMERA_SENSOR_I2C_TYPE_WORD,0x00, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x309b, CAMERA_SENSOR_I2C_TYPE_WORD,0xf0, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x5170, CAMERA_SENSOR_I2C_TYPE_WORD,0x2c, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3908, CAMERA_SENSOR_I2C_TYPE_WORD,0x41, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x5000, CAMERA_SENSOR_I2C_TYPE_WORD,0xc2, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3637, CAMERA_SENSOR_I2C_TYPE_WORD,0x48, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x330b, CAMERA_SENSOR_I2C_TYPE_WORD,0x40, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3908, CAMERA_SENSOR_I2C_TYPE_WORD,0x00, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3948, CAMERA_SENSOR_I2C_TYPE_WORD,0x00, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x320c, CAMERA_SENSOR_I2C_TYPE_WORD,0x01, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x320d, CAMERA_SENSOR_I2C_TYPE_WORD,0x6a, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x320e, CAMERA_SENSOR_I2C_TYPE_WORD,0x01, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x320f, CAMERA_SENSOR_I2C_TYPE_WORD,0xba, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3301, CAMERA_SENSOR_I2C_TYPE_WORD,0x04, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3630, CAMERA_SENSOR_I2C_TYPE_WORD,0x45, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x363a, CAMERA_SENSOR_I2C_TYPE_WORD,0x90, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x330a, CAMERA_SENSOR_I2C_TYPE_WORD,0x00, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x330b, CAMERA_SENSOR_I2C_TYPE_WORD,0x50, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3305, CAMERA_SENSOR_I2C_TYPE_WORD,0x00, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3306, CAMERA_SENSOR_I2C_TYPE_WORD,0x18, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x4509, CAMERA_SENSOR_I2C_TYPE_WORD,0x30, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x5000, CAMERA_SENSOR_I2C_TYPE_WORD,0xc0, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x518d, CAMERA_SENSOR_I2C_TYPE_WORD,0x03, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x518e, CAMERA_SENSOR_I2C_TYPE_WORD,0x6a, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3308, CAMERA_SENSOR_I2C_TYPE_WORD,0x04, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3904, CAMERA_SENSOR_I2C_TYPE_WORD,0x0f, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3948, CAMERA_SENSOR_I2C_TYPE_WORD,0x00, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3307, CAMERA_SENSOR_I2C_TYPE_WORD,0x02, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3310, CAMERA_SENSOR_I2C_TYPE_WORD,0x01, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x334c, CAMERA_SENSOR_I2C_TYPE_WORD,0x01, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x330f, CAMERA_SENSOR_I2C_TYPE_WORD,0x01, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3310, CAMERA_SENSOR_I2C_TYPE_WORD,0x01, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x330e, CAMERA_SENSOR_I2C_TYPE_WORD,0x01, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x391f, CAMERA_SENSOR_I2C_TYPE_WORD,0x41, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x37f9, CAMERA_SENSOR_I2C_TYPE_WORD,0x29, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3306, CAMERA_SENSOR_I2C_TYPE_WORD,0x0c, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x330b, CAMERA_SENSOR_I2C_TYPE_WORD,0x28, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3304, CAMERA_SENSOR_I2C_TYPE_WORD,0x0c, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x331e, CAMERA_SENSOR_I2C_TYPE_WORD,0x09, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3637, CAMERA_SENSOR_I2C_TYPE_WORD,0x47, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3900, CAMERA_SENSOR_I2C_TYPE_WORD,0x91, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x391b, CAMERA_SENSOR_I2C_TYPE_WORD,0x07, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x391c, CAMERA_SENSOR_I2C_TYPE_WORD,0x0a, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x391d, CAMERA_SENSOR_I2C_TYPE_WORD,0x15, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x391e, CAMERA_SENSOR_I2C_TYPE_WORD,0x28, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x4509, CAMERA_SENSOR_I2C_TYPE_WORD,0x20, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x4509, CAMERA_SENSOR_I2C_TYPE_WORD,0x10, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3306, CAMERA_SENSOR_I2C_TYPE_WORD,0x10, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x330b, CAMERA_SENSOR_I2C_TYPE_WORD,0x2c, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3630, CAMERA_SENSOR_I2C_TYPE_WORD,0x65, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x330b, CAMERA_SENSOR_I2C_TYPE_WORD,0x30, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3333, CAMERA_SENSOR_I2C_TYPE_WORD,0x10, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x30b8, CAMERA_SENSOR_I2C_TYPE_WORD,0x21, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x5000, CAMERA_SENSOR_I2C_TYPE_WORD,0xc2, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3301, CAMERA_SENSOR_I2C_TYPE_WORD,0x04, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x330a, CAMERA_SENSOR_I2C_TYPE_WORD,0x00, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3305, CAMERA_SENSOR_I2C_TYPE_WORD,0x00, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3306, CAMERA_SENSOR_I2C_TYPE_WORD,0x10, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3630, CAMERA_SENSOR_I2C_TYPE_WORD,0x65, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x330b, CAMERA_SENSOR_I2C_TYPE_WORD,0x30, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x4509, CAMERA_SENSOR_I2C_TYPE_WORD,0x10, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x363a, CAMERA_SENSOR_I2C_TYPE_WORD,0xe0, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3670, CAMERA_SENSOR_I2C_TYPE_WORD,0x01, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3694, CAMERA_SENSOR_I2C_TYPE_WORD,0x03, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3695, CAMERA_SENSOR_I2C_TYPE_WORD,0x07, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3696, CAMERA_SENSOR_I2C_TYPE_WORD,0x07, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3690, CAMERA_SENSOR_I2C_TYPE_WORD,0xe0, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3691, CAMERA_SENSOR_I2C_TYPE_WORD,0xe1, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3692, CAMERA_SENSOR_I2C_TYPE_WORD,0xe1, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x3693, CAMERA_SENSOR_I2C_TYPE_WORD,0xe1, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x300a, CAMERA_SENSOR_I2C_TYPE_WORD,0x00, CAMERA_SENSOR_I2C_TYPE_BYTE, 0},
		{0x0100, CAMERA_SENSOR_I2C_TYPE_WORD,0x01, CAMERA_SENSOR_I2C_TYPE_BYTE, 5},
	},
	.memory_map_size = 89,
};

static int get_qvga_lux_data_sc0808cs(struct cam_eeprom_ctrl_t *e_ctrl){
	uint32_t lux = 0;

	camera_io_dev_read( &(e_ctrl->io_master_info),
				QVGA_SC080CS_LUX_DATA_REG, &lux, CAMERA_SENSOR_I2C_TYPE_WORD,
				CAMERA_SENSOR_I2C_TYPE_BYTE);
	CAM_INFO(CAM_EEPROM, "lux: 0x%x", lux);
	return lux;
}

static void init_qvga_settinit_qvga_sc080cs(struct cam_eeprom_ctrl_t *e_ctrl){

	struct eeprom_memory_map_init_write_params *pWriteParams = NULL;
	struct cam_sensor_i2c_reg_array    i2c_reg_array = {0};
	struct cam_sensor_i2c_reg_setting  i2c_reg_settings = {0};
	uint32_t count_write;
	int rc = 0;
	pWriteParams = &qvga_sc080cs_setting;
	for(count_write=0;count_write < pWriteParams->memory_map_size; count_write++) {
		i2c_reg_settings.addr_type = pWriteParams->mem_settings[count_write].addr_type;
		i2c_reg_settings.data_type = pWriteParams->mem_settings[count_write].data_type;
		i2c_reg_settings.size = 1;
		i2c_reg_array.reg_addr = pWriteParams->mem_settings[count_write].reg_addr;
		i2c_reg_array.reg_data = pWriteParams->mem_settings[count_write].reg_data;
		i2c_reg_array.delay = pWriteParams->mem_settings[count_write].delay;
		i2c_reg_settings.reg_setting = &i2c_reg_array;

		CAM_DBG(CAM_EEPROM, "count_write %d,%d %d", count_write,i2c_reg_settings.addr_type,i2c_reg_settings.data_type);
		CAM_DBG(CAM_EEPROM, "count_write %d,0x%x 0x%x", count_write,i2c_reg_array.reg_addr,i2c_reg_array.reg_data);
		rc = camera_io_dev_write(&(e_ctrl->io_master_info), &i2c_reg_settings);
		if (rc) {
			CAM_ERR(CAM_EEPROM, "write init params failed rc %d", rc);
			return ;
		}
	}
	return ;
}

static ssize_t qvga_get_name_sc080cs(int driver_flag, char *buf)
{
	ssize_t len = 0;
	if (driver_flag) {
		len += snprintf(buf + len, PAGE_SIZE - len, "%s\n",
				"sc080cs_i");
	} else {
		len += snprintf(buf + len, PAGE_SIZE - len, "%s\n",
				"none");
	}
	return len;
}
#endif